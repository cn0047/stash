// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/to-com/poc-td/app/swagger/restmodel"
)

// GetConfigsOKCode is the HTTP code returned for type GetConfigsOK
const GetConfigsOKCode int = 200

/*GetConfigsOK Successful response.

swagger:response getConfigsOK
*/
type GetConfigsOK struct {

	/*
	  In: Body
	*/
	Payload *restmodel.ListConfigsResponse `json:"body,omitempty"`
}

// NewGetConfigsOK creates GetConfigsOK with default headers values
func NewGetConfigsOK() *GetConfigsOK {

	return &GetConfigsOK{}
}

// WithPayload adds the payload to the get configs o k response
func (o *GetConfigsOK) WithPayload(payload *restmodel.ListConfigsResponse) *GetConfigsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get configs o k response
func (o *GetConfigsOK) SetPayload(payload *restmodel.ListConfigsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConfigsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetConfigsBadRequestCode is the HTTP code returned for type GetConfigsBadRequest
const GetConfigsBadRequestCode int = 400

/*GetConfigsBadRequest Bad Request.

swagger:response getConfigsBadRequest
*/
type GetConfigsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *restmodel.Response400 `json:"body,omitempty"`
}

// NewGetConfigsBadRequest creates GetConfigsBadRequest with default headers values
func NewGetConfigsBadRequest() *GetConfigsBadRequest {

	return &GetConfigsBadRequest{}
}

// WithPayload adds the payload to the get configs bad request response
func (o *GetConfigsBadRequest) WithPayload(payload *restmodel.Response400) *GetConfigsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get configs bad request response
func (o *GetConfigsBadRequest) SetPayload(payload *restmodel.Response400) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConfigsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
