name: Terraform

on:
  push:
    branches:
      - master
    paths:
      - ".ops/terraform/**"
      - ".github/workflows/terraform.yml"
  pull_request:
    paths:
      - ".ops/terraform/**"
      - ".github/workflows/terraform.yml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Env: sandbox|dev|prod"
        required: true
        default: "sandbox"
        type: string

env:
  env-name: ${{ github.event.inputs.environment }}
  # @TODO: uncomment next line, when we have environments.
  # env-name: ${{ github.event.inputs.environment || ((github.ref == 'refs/heads/master' && 'prod') || 'nonprod') }}

jobs:
  validate-and-plan:
    name: Validate and plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "${{ github.workspace }}/.ops/terraform/environments/${{ env.env-name }}"
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Set up cloud sdk
        uses: google-github-actions/setup-gcloud@main
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Find existing terraform plan comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v1
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Terraform Plan

      - name: Delete existing terraform plan comment
        if: github.event_name == 'pull_request' && steps.find-comment.outputs.comment-id != 0
        uses: jungwinter/comment@v1
        with:
          type: delete
          comment_id: ${{ steps.find-comment.outputs.comment-id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create terraform plan comment
        if: github.event_name == 'pull_request' && steps.plan.outcome != 'skipped'
        uses: peter-evans/create-or-update-comment@v1
        with:
          body: |
            ### Terraform Plan *${{ steps.plan.outcome }}* :rocket:
            <details>
              <summary>Show Plan</summary>
            ```diff
            ${{ steps.plan.outputs.stdout }}
            ```
            </details>
          issue-number: ${{ github.event.pull_request.number }}

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  apply:
    name: Apply
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') ||
      contains(github.event.pull_request.labels.*.name, 'auto-deploy')
    runs-on: ubuntu-latest
    needs:
      - validate-and-plan
    defaults:
      run:
        working-directory: "${{ github.workspace }}/.ops/terraform/environments/${{ env.env-name }}"
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Set up cloud sdk
        uses: google-github-actions/setup-gcloud@main
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform apply
        id: apply
        env:
          EC_API_KEY: ${{ secrets.EC_API_KEY }}
        run: terraform apply -auto-approve
