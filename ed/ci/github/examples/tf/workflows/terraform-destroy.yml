name: Terraform Destroy and remove from state

on: 
  workflow_dispatch:
    inputs:
      resourceName:
        description: 'Resource name to destroy and remove from state'
        required: true 
        type: string
      environment:
        description: "dev"
        required: true
        type: environment
        default: "dev"

jobs:
  destroy-and-rm:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: "${{ github.workspace }}/terraform/${{ github.event.inputs.environment }}"

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup-terraform
        with:
          terraform-directory: "${{ github.workspace }}/terraform/${{ github.event.inputs.environment }}"
          WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          GCP_SERVICE_ACCOUNT_EMAIL:  ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          APP_TOKEN:                  ${{ secrets.APP_TOKEN }}
          GOOGLE_STATE_BUCKET:        ${{ secrets.GOOGLE_STATE_BUCKET }}

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false -target='${{ github.event.inputs.resourceName }}'
        env:
          TF_VAR_token: ${{ secrets.APP_TOKEN }}
          TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          TF_VAR_state_bucket: ${{ secrets.GOOGLE_STATE_BUCKET }}

      - name: Terraform State Remove
        id: staterm
        run: terraform state rm '${{ github.event.inputs.resourceName }}'
        env:
          TF_VAR_token: ${{ secrets.APP_TOKEN }}
          TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          TF_VAR_state_bucket: ${{ secrets.GOOGLE_STATE_BUCKET }}
