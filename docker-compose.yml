nginx:
    image: nginx:latest
    restart: always
    ports:
        - "80:80"
    volumes:
        - ./ed:/var/www/html/gh/ed
        - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    links:
        - php-fpm

php-fpm:
    build: ./docker/php-fpm
    volumes:
        - ./ed:/var/www/html/gh/ed
    links:
        - mysql-master
        - mysql-slave-1
        - mongo
        - es

# With purpose to check php-cli just run:
# docker-compose exec php-cli php /gh/ed/docker/examples/one/src/es.php
php-cli:
    build: ./docker/php-cli
    volumes:
        - ./ed:/gh/ed
    links:
        - mysql-master
        - mysql-slave-1
        - mongo
        - es

phalcon:
    build: ./docker/phalcon

# cd ./ed/docker/examples/one/src && docker run --rm -ti -v $PWD:/app composer install
composer:
    image: composer/composer
    working_dir: /gh/ed
    volumes:
        - ./ed/docker/examples/one/src:/gh/ed
    command: install

es:
    image: elasticsearch:latest
    restart: always
    ports:
        - "9200:9200"
        - "9300:9300"
    volumes:
        - ./docker/elasticsearch/config.yml:/etc/elasticsearch/elasticsearch.yml

#
# docker-compose exec mysql /bin/bash
# docker-compose exec mysql service mysql status
#
# docker-compose exec mysql-master mysql -uroot -proot -e "CREATE USER 'repl'@'%' IDENTIFIED BY 'slavepass'"
# docker-compose exec mysql-master mysql -uroot -proot -e "GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%'"
mysql-master:
    image: mysql:latest
    container_name: mysql-master
    restart: always
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=test
        - MYSQL_USER=dbu
        - MYSQL_PASSWORD=dbp
    ports:
        - "3307:3306"
    volumes:
        - ./docker/mysql/mysql-bin.log:/var/log/mysql/mysql-bin.log
        - ./docker/mysql/config-master.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf

# docker-compose exec mysql-slave-1 mysql -uroot -proot -e "CHANGE MASTER TO MASTER_HOST='mysql-master', MASTER_USER='repl', MASTER_PASSWORD='slavepass'"
# docker-compose exec mysql-slave-1 mysql -uroot -proot -e "START SLAVE"
# docker-compose exec mysql-slave-1 mysql -uroot -proot -e "SHOW SLAVE STATUS \G"
mysql-slave-1:
    image: mysql:latest
    container_name: mysql-slave-1
    restart: always
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=test
        - MYSQL_USER=dbu
        - MYSQL_PASSWORD=dbp
    ports:
        - "3308:3306"
    volumes:
        - ./docker/mysql/mysql-bin.log:/var/log/mysql/mysql-bin.log
        - ./docker/mysql/config-master.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    links:
        - mysql-master

mongo:
    image: mongo:latest
